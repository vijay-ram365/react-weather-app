{"version":3,"sources":["components/CurrentWeather.js","components/ForecastedWeather.js","components/DetailedWeather.js","App.js","index.js"],"names":["CurrentWeather","props","currentDate","Date","toDateString","React","createElement","className","data","name","toUpperCase","weather","description","src","concat","icon","alt","main","temp","feels_like","temp_max","temp_min","ForecastedWeather","unixTimeStampConverter","unixTime","forecastEvening","list","dt","forecastTomorrow","toLocaleTimeString","map","item","key","id","DetailedWeather","sunrise","sys","sunset","humidity","pressure","visibility","wind","speed","App","_useState","useState","_useState2","_slicedToArray","currentWeatherData","setCurrentWeatherData","_useState3","_useState4","forecastData","setForecastData","_useState5","_useState6","city","setCity","onSubmit","e","preventDefault","Promise","all","fetch","process","then","responses","response","json","catch","error","console","value","onChange","target","type","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d38528e2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Styles/CurrentWeather.css\";\n\nconst CurrentWeather = (props) => {\n  const currentDate = new Date().toDateString();\n  return (\n    <div className=\"current-weather-background\">\n      <h3>Current Weather</h3>\n      <p>\n        {props.data.name.toUpperCase()} -{\" \"}\n        {props.data.weather[0].description.toUpperCase()}\n      </p>\n      <p>{currentDate}</p>\n      <img\n        src={`https://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`}\n        alt=\"weather icon\"\n      />\n      <p>\n        Temp: {props.data.main.temp}°C | Feels Like:{\" \"}\n        {props.data.main.feels_like}°C\n      </p>\n      <p>\n        H {props.data.main.temp_max}°C | L {props.data.main.temp_min}°C\n      </p>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n","import React from \"react\";\nimport \"../Styles/ForecastedWeather.css\";\n\nconst ForecastedWeather = (props) => {\n  const unixTimeStampConverter = function (unixTime) {\n    const milliseconds = unixTime * 1000;\n    const dateObject = new Date(milliseconds);\n    return dateObject;\n  };\n\n  const forecastEvening = unixTimeStampConverter(props.data.list[0].dt);\n\n  const forecastTomorrow = unixTimeStampConverter(props.data.list[4].dt);\n  return (\n    <div>\n      <h3>Forecasted Weather</h3>\n      <div className=\"grid\">\n        <div className=\"container\">\n          <p>Today at {forecastEvening.toLocaleTimeString()}</p>\n          <p>Temp: {props.data.list[0].main.temp}°C</p>\n          {props.data.list[0].weather.map((item) => {\n            return (\n              <div key={item.id}>\n                <p>{item.description}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${item.icon}@2x.png`}\n                  alt=\"weather icon\"\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"container\">\n          <p>{forecastTomorrow.toDateString()} - Midday</p>\n          <p>Temp: {props.data.list[4].main.temp}°C</p>\n          {props.data.list[4].weather.map((item) => {\n            return (\n              <div key={item.id}>\n                <p>{item.description}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${item.icon}@2x.png`}\n                  alt=\"weather icon\"\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"container\">\n          <p>{forecastTomorrow.toDateString()} - Afternoon</p>\n          <p>Temp: {props.data.list[6].main.temp}°C</p>\n          {props.data.list[6].weather.map((item) => {\n            return (\n              <div key={item.id}>\n                <p>{item.description}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${item.icon}@2x.png`}\n                  alt=\"weather icon\"\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForecastedWeather;\n","import React from \"react\";\n\nconst DetailedWeather = (props) => {\n  const unixTimeStampConverter = function (unixTime) {\n    const milliseconds = unixTime * 1000;\n    const dateObject = new Date(milliseconds);\n    return dateObject;\n  };\n\n  const sunrise = unixTimeStampConverter(props.data.sys.sunrise);\n  const sunset = unixTimeStampConverter(props.data.sys.sunset);\n\n  return (\n    <div>\n      <h3>Detailed Weather</h3>\n      <p>Humidity: {props.data.main.humidity}%</p>\n      <p>Pressure: {props.data.main.pressure}hPa</p>\n      <p>\n        Sunrise: {sunrise.toLocaleTimeString()} | Sunset:{\" \"}\n        {sunset.toLocaleTimeString()}\n      </p>\n      <p>Visibility: {props.data.visibility}km</p>\n      <p>Wind Speed: {props.data.wind.speed}m/s</p>\n    </div>\n  );\n};\n\nexport default DetailedWeather;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport ForecastedWeather from \"./components/ForecastedWeather\";\nimport DetailedWeather from \"./components/DetailedWeather\";\nimport \"./Styles/App.css\";\n\nfunction App() {\n  const [currentWeatherData, setCurrentWeatherData] = useState([]);\n  const [forecastData, setForecastData] = useState([]);\n  const [city, setCity] = useState(\"\");\n\n  const getWeather = function (e) {\n    e.preventDefault();\n    Promise.all([\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_KEY}&units=metric`\n      ),\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${process.env.REACT_APP_KEY}&units=metric`\n      ),\n    ])\n      .then(function (responses) {\n        return Promise.all(\n          responses.map(function (response) {\n            return response.json();\n          })\n        );\n      })\n      .then(function (data) {\n        setCurrentWeatherData(data[0]);\n        setForecastData(data[1]);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <header>\n        <form onSubmit={getWeather}>\n          <label>Enter City: </label>\n          <input\n            value={city}\n            onChange={(e) => {\n              setCity(e.target.value);\n            }}\n            type=\"text\"\n            name=\"city\"\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </header>\n      {currentWeatherData.main ? (\n        <div>\n          <div className=\"current-weather-grid\">\n            <CurrentWeather data={currentWeatherData} />\n            <DetailedWeather data={currentWeatherData} />\n          </div>\n\n          <ForecastedWeather data={forecastData} />\n        </div>\n      ) : (\n        <div>\n          <p className=\"first-message\">\n            No weather data yet, try entering a city and if this message is\n            still here contact the admin.\n          </p>\n        </div>\n      )}\n      <footer>\n        <small>©2023 Created by Vijay Ramkissoon</small>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}